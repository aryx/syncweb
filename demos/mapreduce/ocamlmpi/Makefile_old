OCAMLC=ocamlc
OCAMLOPT=ocamlopt
OCAMLDEP=ocamldep
OCAMLMKLIB=ocamlmklib

DESTDIR=`$(OCAMLC) -where`/ocamlmpi
MPIINCDIR=/home/pad/packages/Linux/include
MPILIBDIR=/home/pad/packages/Linux/lib
#MPIINCDIR=/usr/include/mpitata
#MPILIBDIR=/usr/local/lib/mpich/lib/LINUX/ch_p4
#MPILIB=mpich
#MPILIBDIR=/home/yyzhou/pad/packages/lib
#MPIINCDIR=/usr/include/mpitata
#MPILIBDIR=/usr/lib/mpich/lib
#MPIINCDIR=/usr/include/mpitata
MPILIB=mpich

CC=gcc
CFLAGS=-I`$(OCAMLC) -where` -I$(MPIINCDIR) -O -g -Wall

##############################################################################
COBJS=init.o comm.o msgs.o collcomm.o groups.o utils.o
OBJS=mpi.cmo

##############################################################################
all: libmpi_stubs.a mpi.cma 
all.opt: mpi.cmxa
opt: all.opt

libmpi_stubs.a: $(COBJS)
	$(OCAMLMKLIB) -o mpi_stubs $(COBJS) -L$(MPILIBDIR) -l$(MPILIB)

mpi.cma: $(OBJS)
	ocamlc -a -thread -dllib dllmpi_stubs.so -cclib -lmpi_stubs -ccopt -L$(MPILIBDIR) -cclib  -l$(MPILIB)  -o mpi.cma $(OBJS)
#	$(OCAMLMKLIB) -o mpi -cclib -lmpi_stubs -cclib -l$(MPILIB) $(OBJS) 


mpi.cmxa: $(OBJS:.cmo=.cmx)
	ocamlopt -a -thread -cclib -lmpi_stubs -ccopt -L$(MPILIBDIR) -cclib  -l$(MPILIB) -o mpi.cmxa $(OBJS:.cmo=.cmx)
#	$(OCAMLMKLIB) -o mpi $(OBJS:.cmo=.cmx) -ccopt -L$(MPILIBDIR) -cclib -l$(MPILIB)


##############################################################################
testmpi: test.ml mpi.cma libcamlmpi.a
	ocamlc -o testmpi unix.cma mpi.cma test.ml -ccopt -L.

clean::
	rm -f testmpi

test: testmpi
	mpirun -np 5 ./testmpi

test_mandel: test_mandel.ml mpi.cmxa libcamlmpi.a
	ocamlopt -o test_mandel graphics.cmxa mpi.cmxa test_mandel.ml -ccopt -L.

test_pad: test_pad.ml mpi.cma
	ocamlc -o test_pad -I ../commons str.cma unix.cma  ../commons/commons.cma mpi.cma test_pad.ml -ccopt -L.

test2:
	mpirun -np 3 ./test_pad arg1 arg2

clean::
	rm -f test_mandel test_pad



install:
	cp mpi.mli mpi.cmi mpi.cma mpi.cmxa mpi.a libcamlmpi.a $(DESTDIR)




##############################################################################
.SUFFIXES: .ml .mli .cmo .cmi .cmx

.ml.cmo:
	$(OCAMLC) -c $<
.mli.cmi:
	$(OCAMLC) -c $<
.ml.cmx:
	$(OCAMLOPT) -c $<

clean::
	rm -f *.cm* *.o *.a dll*.so
depend:
	$(OCAMLDEP) *.ml > .depend
	gcc -MM $(CFLAGS) *.c >> .depend

-include .depend

